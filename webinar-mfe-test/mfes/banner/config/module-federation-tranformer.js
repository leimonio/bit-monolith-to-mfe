/* eslint no-param-reassign: 0 */

const { container } = require('webpack')

const { ModuleFederationPlugin } = container

const DEV_PUBLIC_PATH = 'http://localhost:60000/'
const PROD_PUBLIC_PATH = 'https://mfe-banner.netlify.app/'

/* get a webpack config and return a mutated one */
module.exports.moduleFederationRemoteTransformer = (
  configMutator,
  _context,
  appEntries
) => {
  configMutator.addPlugin(
    /* add the module federation plugin to the webpack bundle */
    new ModuleFederationPlugin({
      /**
       * the following is the path used by the host app, to load this app:
       * mfe_video_plus_banner@https://mfe-banner.netlify.app/remoteEntry.js
       */
      name: 'mfe_video_plus_banner',
      /* this file is generated by the mf webpack plugin */
      filename: 'remoteEntry.js',
      exposes: {
        ...appEntries,
      },
      /**
       * a list of peer dependencies (to be loaded by the host app).
       */
      shared: {
        react: {
          singleton: true,
          requiredVersion: '^18.2.0',
          eager: true,
        },
        'react-dom': {
          singleton: true,
          requiredVersion: '^18.2.0',
          eager: true,
        },
        'react-dom/client': {
          singleton: true,
          requiredVersion: '^18.2.0',
          eager: true,
        },
        '@chakra-ui/react': {
          singleton: true,
          requiredVersion: '^2.2.1',
          eager: true,
        },
        '@emotion/react': {
          singleton: true,
          requiredVersion: '^11.11.0',
          eager: true,
        },
        '@emotion/styled': {
          singleton: true,
          requiredVersion: '^11.11.0',
          eager: true,
        },
        'framer-motion': {
          singleton: true,
          requiredVersion: '^10.12.16',
          eager: true,
        },
        'react-icons': {
          singleton: true,
          requiredVersion: '^4.4.0',
          eager: true,
        },
        'react-slick': {
          singleton: true,
          requiredVersion: '^0.29.0',
          eager: true,
        },
      },
    })
  )

  const mode = configMutator.raw.mode || 'production'

  configMutator.raw.output = configMutator.raw.output || {}
  configMutator.raw.output.publicPath =
    mode === 'development' ? DEV_PUBLIC_PATH : PROD_PUBLIC_PATH

  return configMutator
}
